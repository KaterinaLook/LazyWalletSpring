    function pressKey(value) {
        const display = document.getElementById("display");
        let current = display.textContent;

        if (current === "0") current = "";
        current += value;

        display.textContent = current;
        document.getElementById("amountInput").value = current;
    }

    function backspace() {
        let display = document.getElementById("display");
        let current = display.textContent;

        if (current.length > 1) {
            display.textContent = current.slice(0, -1);
            document.getElementById("amountInput").value = display.textContent;
        } else {
            display.textContent = "0";
            document.getElementById("amountInput").value = "0";
        }
    }

    const categorySelect = document.getElementById('categorySelect');
    const newCategoryModal = document.getElementById('newCategoryModal');
    const newCategoryName = document.getElementById('newCategoryName');
    const submitNewCategory = document.getElementById('submitNewCategory');
    const closeModalBtn = document.querySelector('.close');

    function populateCategorySelect() {
        const selectedType = document.getElementById('type').value.toUpperCase();
        categorySelect.innerHTML = '';

        fetch('/api/categories')
            .then(response => response.json())
            .then(data => {
                const filtered = data.filter(category => category.type === selectedType);
                filtered.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category.name;
                    option.textContent = category.name;
                    categorySelect.appendChild(option);
                });

                const addOption = document.createElement('option');
                addOption.value = "add_new_category";
                addOption.textContent = "Add new category...";
                categorySelect.appendChild(addOption);
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", error);
            });
    }

    categorySelect.addEventListener('change', function () {
        if (categorySelect.value === 'add_new_category') {
            newCategoryModal.style.display = 'block';
        }
    });

    closeModalBtn.addEventListener('click', function () {
        newCategoryModal.style.display = 'none';
    });

    window.addEventListener('click', function (event) {
        if (event.target === newCategoryModal) {
            newCategoryModal.style.display = 'none';
        }
    });

   submitNewCategory.addEventListener('click', function () {
       const newCategory = newCategoryName.value.trim();
       const selectedType = document.getElementById('type').value.toUpperCase(); // "EXPENSE" –∏–ª–∏ "INCOME"

       if (!newCategory) {
           alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!");
           return;
       }

       // –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º JSON –æ–±—ä–µ–∫—Ç
       const categoryData = {
           name: newCategory,
           type: selectedType
       };

       // –û—Ç–ø—Ä–∞–≤–∏–º POST-–∑–∞–ø—Ä–æ—Å
       fetch('/api/categories/add', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json'
           },
           body: JSON.stringify(categoryData)
       })
       .then(response => {
           if (response.ok) {
               return response.text(); // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ response.json() –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
           } else if (response.status === 409) {
               throw new Error("–¢–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
           } else {
               throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é");
           }
       })
       .then(message => {
           alert(message);
           newCategoryModal.style.display = 'none';
           newCategoryName.value = '';
           populateCategorySelect(); // –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
       })
       .catch(error => {
           alert(error.message);
       });
   });

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏–∞–≥—Ä–∞–º–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤
   let expensesChart; // –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

   function loadExpenseChart() {
       fetch('/api/transactions/stats')
           .then(response => response.json())
           .then(data => {
               const labels = data.map(item => item.category);
               const values = data.map(item => item.total);

               if (expensesChart) {
                   expensesChart.destroy();
               }

               const ctx = document.getElementById('expensesChart').getContext('2d');
               expensesChart = new Chart(ctx, {
                   type: 'pie',
                   data: {
                       labels: labels,
                       datasets: [{
                           label: 'Expenses',
                           data: values,
                           backgroundColor: [
                               '#ff6384', '#36a2eb', '#cc65fe', '#fee165',
                               '#4bc0c0', '#9966ff', '#ff9f40', '#c9cbcf'
                           ]
                       }]
                   },
                   options: {
                       responsive: true,
                       maintainAspectRatio: false
                   }
               });
           })
           .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞:", error));
   }

document.getElementById('transactionForm').addEventListener('submit', function (event) {
    event.preventDefault(); // –æ—Ç–∫–ª—é—á–∞–µ–º –æ–±—ã—á–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

    const amount = document.getElementById('display').textContent.trim();
    const type = document.getElementById('type').value;
    const category = document.getElementById('categorySelect').value;

    if (!amount || amount === "0") {
        alert("Add amount");
        return;
    }

    if (!category || category === "add_new_category") {
        alert("Please choose a valid category");
        return;
    }

    const formData = new URLSearchParams();
    formData.append("amount", amount);
    formData.append("type", type);
    formData.append("category", category);

    fetch('/add-transaction', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: formData
    })
    .then(response => {
        if (response.ok) {
            // –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –æ–±–Ω–æ–≤–∏–º –≥—Ä–∞—Ñ–∏–∫
            loadExpenseChart();
            document.getElementById('display').textContent = "0";
            document.getElementById('amountInput').value = "0";
        } else {
            throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏");
        }
    })
    .catch(error => {
        console.error(error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é");
    });
});

window.addEventListener('DOMContentLoaded', () => {
    populateCategorySelect();
    loadExpenseChart(); // üü¢ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
});
